cabal-version:      >=1.10
name:               aeson-benchmarks
version:            0
build-type:         Simple
tested-with:
  GHC ==8.0.2
   || ==8.2.2
   || ==8.4.4
   || ==8.6.5
   || ==8.8.4
   || ==8.10.7
   || ==9.0.2
   || ==9.2.5

extra-source-files: cbits/*.c

flag text2
  manual:  False
  default: False

library
  default-language: Haskell2010
  hs-source-dirs:   src src-ffi src-pure attoparsec-iso8601/src
  c-sources:        cbits/unescape_string.c
  build-depends:
      attoparsec
    , base
    , base-compat-batteries
    , bytestring             >=0.10.4
    , containers
    , data-fix
    , deepseq
    , dlist
    , exceptions
    , generically
    , ghc-prim
    , hashable
    , indexed-traversable
    , mtl
    , OneTuple
    , primitive
    , QuickCheck
    , scientific
    , semialign
    , strict
    , syb
    , tagged
    , template-haskell
    , text
    , text-short
    , th-abstraction
    , these
    , time
    , time-compat
    , transformers
    , unordered-containers
    , uuid-types
    , vector
    , witherable

  if flag(text2)
    build-depends: text >=2

  else
    build-depends: text <2

  if !impl(ghc >=8.6)
    build-depends: contravariant

  cpp-options:      -DUSE_ORDEREDMAP=1
  ghc-options:      -Wall
  cpp-options:      -DGENERICS
  exposed-modules:
    Data.Aeson
    Data.Aeson.Encoding
    Data.Aeson.Encoding.Builder
    Data.Aeson.Encoding.Internal
    Data.Aeson.Internal
    Data.Aeson.Internal.ByteString
    Data.Aeson.Internal.Functions
    Data.Aeson.Internal.StrictBuilder
    Data.Aeson.Internal.Text
    Data.Aeson.Internal.TH
    Data.Aeson.Internal.Time
    Data.Aeson.Key
    Data.Aeson.KeyMap
    Data.Aeson.Parser
    Data.Aeson.Parser.Internal
    Data.Aeson.Parser.Time
    Data.Aeson.Parser.Unescape
    Data.Aeson.Parser.UnescapePure
    Data.Aeson.Text
    Data.Aeson.TH
    Data.Aeson.Types
    Data.Aeson.Types.Class
    Data.Aeson.Types.FromJSON
    Data.Aeson.Types.Generic
    Data.Aeson.Types.Internal
    Data.Aeson.Types.ToJSON
    Data.Attoparsec.Time
    Data.Attoparsec.Time.Internal

  if !flag(text2)
    exposed-modules: Data.Aeson.Parser.UnescapeFFI

-- Idea is to fold as many benchmarks into this as possible.
executable aeson-benchmark-suite
  default-language: Haskell2010
  main-is:          Suite.hs
  hs-source-dirs:   bench examples/src
  ghc-options:      -Wall -rtsopts
  build-depends:
      aeson-benchmarks
    , attoparsec
    , base
    , base-compat-batteries
    , base16-bytestring
    , blaze-builder
    , bytestring
    , containers
    , criterion
    , deepseq
    , filepath
    , hashable
    , json
    , scientific
    , tagged
    , template-haskell
    , text
    , time
    , unordered-containers
    , vector

  other-modules:
    AesonFoldable
    AesonMap
    Auto.G.BigProduct
    Auto.G.BigRecord
    Auto.G.BigSum
    Auto.G.D
    Auto.T.BigProduct
    Auto.T.BigRecord
    Auto.T.BigSum
    Auto.T.D
    AutoCompare
    Compare
    Compare.JsonBench
    CompareWithJSON
    Dates
    GitHub
    Issue673
    Micro
    Options
    Twitter
    Twitter.Generic
    Twitter.Manual
    Twitter.Options
    Twitter.TH
    Typed
    Typed.Generic
    Typed.Manual
    Typed.TH
    UnescapePureText2
    Utils

  if impl(ghc <8.4)
    other-modules: Compare.JsonBuilder
    build-depends: json-builder

  if !impl(ghc >=8.0)
    build-depends: fail

  if !flag(text2)
    -- buffer-builder might work with text-2 sometime
    build-depends: buffer-builder
    other-modules: Compare.BufferBuilder

    -- this module won't
    other-modules: UnescapePureText1
