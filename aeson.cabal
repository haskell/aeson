name:            aeson
version:         0.7.1.0
license:         BSD3
license-file:    LICENSE
category:        Text, Web, JSON
copyright:       (c) 2011-2014 Bryan O'Sullivan
                 (c) 2011 MailRank, Inc.
author:          Bryan O'Sullivan <bos@serpentine.com>
maintainer:      Bryan O'Sullivan <bos@serpentine.com>
stability:       experimental
tested-with:     GHC == 7.4, GHC == 7.6, GHC == 7.8
synopsis:        Fast JSON parsing and encoding
cabal-version:   >= 1.8
homepage:        https://github.com/bos/aeson
bug-reports:     https://github.com/bos/aeson/issues
build-type:      Simple
description:
    A JSON parsing and encoding library optimized for ease of use
    and high performance.
    .
    To get started, see the documentation for the @Data.Aeson@ module
    below.
    .
    Parsing performance on an early 2011 MacBook Pro (2.2GHz Core i7),
    running 64-bit GHC 7.6.3, for mostly-English tweets from Twitter's
    JSON search API:
    .
    * 0.8 KB: 34124 msg\/sec (27.8 MB\/sec)
    .
    * 6.4 KB: 6833 msg\/sec (43.0 MB\/sec)
    .
    * 11.8 KB: 3410 msg\/sec (39.2 MB\/sec)
    .
    * 31.2 KB: 1157 msg\/sec (35.3 MB\/sec)
    .
    * 61.5 KB: 542 msg\/sec (32.5 MB\/sec)
    .
    Handling heavily-escaped text is a little more work.  Here is
    parsing performance with Japanese tweets, where much of the text
    is entirely Unicode-escaped.
    .
    * 14.6 KB: 2101 msg\/sec (30.0 MB\/sec)
    .
    * 44.1 KB: 667 msg\/sec (28.7 MB\/sec)
    .
    * 82.9 KB: 360 msg\/sec (29.2 MB\/sec)
    .
    Encoding performance on the same machine and data:
    .
    * English, 0.8 KB: 109697 msg\/sec (89.3 MB\/sec)
    .
    * English, 6.4 KB: 18517 msg\/sec (116.4 MB\/sec)
    .
    * Engish, 61.5 KB: 1963 msg\/sec (118.0 MB\/sec)
    .
    * Japanese, 14.6 KB: 12140 msg\/sec (173.5 MB\/sec)
    .
    * Japanese, 44.1 KB: 3980 msg\/sec (171.3 MB\/sec)
    .
    (A note on naming: in Greek mythology, Aeson was the father of Jason.)

extra-source-files:
    README.markdown
    benchmarks/*.cabal
    benchmarks/*.hs
    benchmarks/*.py
    benchmarks/Makefile
    benchmarks/json-data/*.json
    changelog.md
    examples/*.hs

flag developer
  description: operate in developer mode
  default: False
  manual: True

library
  exposed-modules:
    Data.Aeson
    Data.Aeson.Encode
    Data.Aeson.Generic
    Data.Aeson.Parser
    Data.Aeson.Types
    Data.Aeson.TH

  other-modules:
    Data.Aeson.Encode.ByteString
    Data.Aeson.Functions
    Data.Aeson.Parser.Internal
    Data.Aeson.Types.Class
    Data.Aeson.Types.Generic
    Data.Aeson.Types.Instances
    Data.Aeson.Types.Internal

  build-depends:
    attoparsec >= 0.11.3.0,
    base == 4.*,
    bytestring >= 0.10.4.0,
    containers,
    deepseq,
    dlist >= 0.2,
    ghc-prim >= 0.2,
    hashable >= 1.1.2.0,
    mtl,
    old-locale,
    scientific >= 0.3,
    syb,
    template-haskell >= 2.4,
    text >= 1.1.1.0,
    time,
    unordered-containers >= 0.2.3.0,
    vector >= 0.7.1

  if flag(developer)
    ghc-options: -Werror
    ghc-prof-options: -auto-all

  ghc-options: -O2 -Wall
  cpp-options: -DGENERICS

test-suite tests
  type:           exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is:        Properties.hs
  other-modules:
    Encoders
    Functions
    Instances
    Options
    Properties.Deprecated
    Types

  ghc-options: -Wall -threaded -rtsopts
  cpp-options: -DGHC_GENERICS

  build-depends:
    HUnit,
    QuickCheck,
    aeson,
    attoparsec,
    base,
    bytestring,
    containers,
    ghc-prim >= 0.2,
    template-haskell,
    test-framework,
    test-framework-hunit,
    test-framework-quickcheck2,
    text,
    time,
    unordered-containers,
    vector

source-repository head
  type:     git
  location: git://github.com/bos/aeson.git

source-repository head
  type:     mercurial
  location: https://bitbucket.org/bos/aeson
